@page "/viewoffers"

@using ElevPortalen.Models
@using ElevPortalen.Pages.AlertBox
@using ElevPortalen.Services;

@inject JobService _jobService
@inject IJSRuntime jsRuntime

<div class="container-fluid">
    <div class="row d-flex justify-content-sm-center">
        @if (!isLoaded)
        {
            <!-- Placeholder skeleton for card -->
            @for (int i = 0; i < 5; i++)
            {
                <div class="card m-2 p-0 mt-3 shadow-sm">
                    <div class="card-skeleton-body">
                        <div class="skeleton-title"></div>
                        <div class="skeleton-address"></div>
                        <div class="skeleton-details"></div>
                    </div>
                    <div class="card-skeleton-footer d-flex">
                        <div class="skeleton-line"></div>
                        <div class="skeleton-line"></div>
                        <div class="skeleton-line"></div>
                    </div>
                </div>
            }
        }
        else
        {
            <!-- Actual cards -->
            @foreach (var job in _jobList)
            {
                <div class="card m-2 p-0 mt-3 shadow-sm">
                    <div class="card-header bg-success">
                        <div class="CompanyName badge mx-1">@job.CompanyName</div>
                    </div>
                    <div class="card-body">
                        <h4 class="card-title"><span class="badge bg-secondary">@job.Title</span></h4>
                        <div class="position-details">
                            <h4><div class="card-link" @onclick="() => NavigateToNewTab(job.JobLink)">@job.Title med specielle i @job.Speciality</div></h4>
                            <h6 class="card-address mb-2 text-muted">@job.JobAddress</h6>
                        </div>
                    </div>
                    <div class="card-footer d-flex justify-content-center">                      
                        <div class="specialization badge bg-secondary mx-1">@job.Speciality</div>
                        <div class="NumOfPositions badge bg-secondary mx-1">Antal ledige plads : @job.NumberOfPositionsAvailable</div>
                        <div class="specialization badge bg-secondary mx-1">Ansøgningsfrist : @job.Deadline.ToShortDateString()</div>
                    </div>
                </div>
            }
        }
    </div>
</div>

<AlertBox @ref="_alertBox"/>

@code {
    private List<JobOfferModel> _jobList = new List<JobOfferModel>();
    private AlertBox _alertBox = new AlertBox();
    private bool isLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        await GetAllJobOffers();
    }

    #region get all joboffers to list
    private async Task GetAllJobOffers()
    {
        var (list, message, success) = await _jobService.GetAllOffers();
        isLoaded = success;
        if (success)
        {
            _jobList = list;
            // _alertBox.SetMessage(true, message,5000,success:true);
        }
        else
        {
            _alertBox.SetMessage(true, message, 0, warning:true);
        }
    }
    #endregion


    #region Navigate to company website Link with opening new window
    public async Task NavigateToNewTab(string link)
    {
        string url = "https://" + link;
        await jsRuntime.InvokeVoidAsync("open", url, "_blank");
    }
    #endregion
}
