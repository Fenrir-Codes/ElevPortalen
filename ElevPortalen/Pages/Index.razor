@page "/"
@*Lavet af Jozsef*@

@using ElevPortalen.Services;
@using ElevPortalen.Data;
@using ElevPortalen.Models;

@inject ElevPortalenDataDbContext _context
@inject StudentService _studentService
@inject CompanyService _companyService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IConfiguration Configuration
@inject NavigationManager NavManager

<PageTitle>Home</PageTitle>

@* HHTMl and its logic*@
<div class="container-fluid">

        @if (isAuthenticated)
        {

            @if (_authState.User.IsInRole(Student) && _studentList.Count >= 1)
            {
                <table class="table table-striped table-hover table-bordered">
                    <thead>
                        <tr>
                        <th scope="col">Title</th>
                        <th scope="col">Firstname</th>
                        <th scope="col">Middlename</th>
                        <th scope="col">Lastname</th>
                        <th scope="col">Address</th>
                        <th scope="col">Description</th>
                        <th scope="col">Speciality</th>
                        <th scope="col">Phone Number</th>
                        </tr>
                    </thead>
                    <tbody class="table-group-divider">
                        @foreach (var data in _studentList)
                        {
                            <tr>
                                <td>@data.Title</td>
                                <td>@data.FirstName</td>
                                <td>@data.MiddleName</td>
                                <td>@data.LastName</td>
                                <td>@data.Address</td>
                                <td>@data.Description</td>
                                <td>@data.Speciality</td>
                                <td>@data.PhoneNumber</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else if (_authState.User.IsInRole(Company) && _companyList.Count >= 1)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Company Name</th>
                            <th>Address</th>
                            <th>Region</th>
                            <th>Email</th>
                            <th>Link</th>
                            <th>Preferences</th>
                            <th>Description</th>
                            <th>Phone Number</th>
                            <th>Hiring Now</th>
                            <th>Profile Visible</th>
                        </tr>
                    </thead>
                <tbody class="table-group-divider">
                        @foreach (var data in _companyList)
                        {
                            <tr>
                                <td>@data.CompanyName</td>
                                <td>@data.CompanyAddress</td>
                                <td>@data.Region</td>
                                <td>@data.Email</td>
                                <td>@data.Link</td>
                                <td>@data.Preferences</td>
                                <td>@data.Description</td>
                                <td>@data.PhoneNumber</td>
                                <td>@data.IsHiring</td>
                                <td>@data.IsVisible</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>
                    @if (_authState.User.IsInRole(Student))
                    {
                        Message = "It seems like no personal data have been added to your profile, click the button to register your data.";
                        @Message
                    }
                    else if (_authState.User.IsInRole(Company))
                    {
                        Message = "It seems like no data have been added to your Company profile, click the button to register your data.";
                        @Message
                    }
                    else
                    {
                        Message = "You have no Role assigned!";
                        @Message
                    }
                </p>
                <br>

                <button class ="btn btn-success" @onclick="NavigateToRegister">Go Register Your Data</button>
            }
        }
        else
        {
            Message = "Please login first.";
            <label>@Message</label>
        }

</div>


@code{
    // private fields within the scope of the class
    private AuthenticationState? _authState;
    private List<StudentModel> _studentList = new List<StudentModel>();
    private List<CompanyModel> _companyList = new List<CompanyModel>();

    private bool isAuthenticated = false;
    private string Company = "Company";
    private string Student = "Student";
    private string Message = "";

    #region OnInitialize
    protected override async Task OnInitializedAsync()
    {
        // Getting the user current authentication state.
        _authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        if (_authState != null)
        {
            if (_authState.User.Identity?.IsAuthenticated == true)
            {
                // If authenticated set the bool to true zhan read the users data from the data table with the help of ReadData function
                isAuthenticated = true;
                await ReadData();
            }
            else
            {
                isAuthenticated = false;
            }
        }
    }
    #endregion

    #region Reading the data from the database with the user claims
    public async Task ReadData()
    {
        //Authenticating the user
        var _user = _authState.User;

        if (_authState.User.IsInRole(Student)) // If the role is Student
        {
            //Getting the data with the service call from student
            _studentList = await _studentService.ReadData(_user);
        }
        else if (_authState.User.IsInRole(Company)) // If the role is Company
        {
            //Getting the data with the service call from company
            _companyList = await _companyService.ReadData(_user);
        }
        else
        {
            Message = $"You Have No Role Assigned - Could not read data.";
        }
    }
    #endregion

    #region navigation to register pages
    private void NavigateToRegister()
    {
        // If the user signed in and have no data in its data table
        if (_authState.User.IsInRole(Company))  // If the user role is Company
        {
            NavManager.NavigateTo("/registercompany"); // Route to the company registration page
        }
        else if (_authState.User.IsInRole(Student)) // If the role is Student
        {
            NavManager.NavigateTo("/registerstudent"); // Route to the student registration page
        }
    }
    #endregion

}
   