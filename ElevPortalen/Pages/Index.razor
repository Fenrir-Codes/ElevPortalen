@page "/"
@*Lavet af Jozsef*@

@using ElevPortalen.Services;
@using ElevPortalen.Data;
@using ElevPortalen.Models;


@inject ElevPortalenDataDbContext _context
@inject StudentService _studentService
@inject CompanyService _companyService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IConfiguration Configuration
@inject NavigationManager NavManager
@inject PostCodeService PostalCodeService

<PageTitle>Home</PageTitle>

@* HHTMl and its logic*@
<div class="container-fluid text-center">

    <!-- Authorized Student and Company-->
    <AuthorizeView Roles="Student, Company, Admin">
        <Authorized>
            @if (context.User.IsInRole(Admin))
            {
                <AdminDashBoard></AdminDashBoard>
            }
            else if (_companyList.Count >= 1 && context.User.IsInRole(Student))
            {
                <!-- Display Company-related content -->
                <div class="container">
                    <div class="row">
                        @foreach (var data in _companyList)
                        {
@*                             <div class="col-sm-6 mb-3">
                                <div class="card">
                                    <div class="card-body">
                                        <h5 class="card-title">@data.CompanyName</h5>
                                        <p class="card-text">@data.Description</p>
                                    </div>
                                </div>
                            </div> *@

                            <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                                <div class="our-team">
                                    <div class="team-content">
                                        <h3 style="font-size:20px" class="name">@data.CompanyName</h3>
                                    </div>
                                    <ul class="social">
                                        <li><a href="@data.Link" class="fa-solid fa-up-right-from-square"></a></li>
                                        <li><a href="https://codepen.io/collection/XdWJOQ/" class="fa fa-linkedin"></a></li>
                                    </ul>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                

            }
            else if (_studentList.Count >= 1 && context.User.IsInRole(Company))
            {
                <!-- Display Student-related content -->
                <div class="container">
                <div class="row">
                    @foreach (var data in _studentList)
                    {
@*                             <div class="col-sm-6 mb-3">
                                <div class="card">
                                    <div class="card-body">
                                        <h5 class="card-title">@data.FirstName @data.LastName</h5>
                                        <p class="card-text">@data.Description</p>
                                    </div>
                                </div>
                            </div> *@

                            <div class="col-12 col-sm-6  col-lg-3">
                                <div class="our-team">
                                    <div class="picture">
                                        @if (data.profileImage != "")
                                        {
                                            <img class="img-fluid" src="images/ProfileImages/@data.profileImage">
                                        }
                                        else
                                        {
                                            <img class="img-fluid" src="images/DefaultAvatar.jpg">
                                        }
                                    </div>
                                    <div class="team-content">
                                        <h3 class="name">@data.FirstName @data.LastName</h3>
                                        <h4 class="title">@data.Speciality</h4>
                                    </div>
                                    <ul class="social">
                                        <li><a href="https://codepen.io/collection/XdWJOQ/" class="fa fa-facebook" aria-hidden="true"></a></li>
                                        <li><a href="https://codepen.io/collection/XdWJOQ/" class="fa fa-linkedin" aria-hidden="true"></a></li>
                                    </ul>
                                </div>
                            </div>
                    }
                    </div>
                </div>
            }
            else
            {
                Message = "No data.";
                <p>@Message</p>
            }
        </Authorized>

        <NotAuthorized>
            <div class="container-fluid d-flex flex-column align-items-center justify-content-top">

@*                 <input type="text" @bind="searchTerm" @oninput="HandleInputChange" />

                @if (postalCodes != null)
                {
                        @foreach (var postalCode in postalCodes)
                        {
                        <p>@postalCode.Nr</p>
                        }

                } *@

                <div class="text-container mb-5" style="position:relative; text-align: center; z-index: 2;">
                    <h1>Velkommen til ElevPortalen</h1>
                    <div class="d-inline-flex align-items-center">
                        <a href="/Identity/Account/Login" class="btn mb-3 btn-hover-change" role="button" data-bs-toggle="button">Login</a>
                        <p> eller </p>
                        <a href="/Identity/Account/Register" class="btn mb-3 btn-hover-change" role="button" data-bs-toggle="button">Registrer</a>
                        <p> dig først</p>
                    </div>
                </div>
                <div class="bg-image-container text-center position-relative">
                    <img src="/images/Logo_ElevPortalen.png" class="bg-image" style="max-width:75%; height: auto; opacity: 0.1;">
                </div>
            </div>

        </NotAuthorized>
        
    </AuthorizeView>

</div>




@code {
    // private fields within the scope of the class
    private AuthenticationState? _authState;
    private List<StudentModel> _studentList = new List<StudentModel>();
    private List<CompanyModel> _companyList = new List<CompanyModel>();

    private bool isAuthenticated = false;
    private string Company = "Company";
    private string Student = "Student";
    private string Admin = "Admin";
    private string Message = "";

    private List<PostalCodeModel> postalCodes = new List<PostalCodeModel>();
    private string searchTerm = "";


    #region OnInitialize
    protected override async Task OnInitializedAsync()
    {
        // Getting the user current authentication state.
        _authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        if (_authState != null)
        {
            if (_authState.User.Identity?.IsAuthenticated == true)
            {
                // If authenticated set the bool to true than read the users data from the data table with the help of ReadData function
                isAuthenticated = true;

                await ReadAllData();
            }
            else if (_authState.User.IsInRole("Admin"))
            {
                Message = $"Admin logged in.";
            }
            else
            {
                isAuthenticated = false;
            }
        }
    }
    #endregion

    #region Reading the data from the database with the user claims
    public async Task ReadAllData()
    {
        if (_authState.User.IsInRole(Student)) // If the role is Student
        {
            //Getting the data
            _companyList = await _companyService.ReadAllCompanyData();
        }
        else if (_authState.User.IsInRole(Company)) // If the role is Company
        {
            //Getting the data with the service call from company
            _studentList = await _studentService.ReadAllStudentData();
        }
        else
        {
            return;
        }
    }
    #endregion

    #region Navigate to profile function
    private void GoToProfile()
    {
        NavManager.NavigateTo("/profile");
    }
    #endregion

    #region outcommented code
    // private async Task HandleInputChange(ChangeEventArgs e)
    // {
    //     searchTerm = e.Value.ToString();
    //     await SearchPostalCodes();
    // }

    // private async Task SearchPostalCodes()
    // {
    //     try
    //     {
    //         var text = char.ToUpper(searchTerm[0]) + searchTerm.Substring(1);
    //         postalCodes = await PostalCodeService.GetPostalCodes(text);
    //     }
    //     catch (Exception ex)
    //     {
    //         // Handle the exception as needed
    //         Console.WriteLine(ex.Message);
    //     }
    // }
    #endregion

}
