@page "/viewmessages/{ReceiverId:int}"

@using ElevPortalen.Pages.AlertBox
@using ElevPortalen.Services;
@using ElevPortalen.Models;

@inject MessageService _messageService

<PageTitle>Messages</PageTitle>

<div class="container-fluid">

     <div class="card shadow-sm">
        @foreach (var data in _listOfMessages)
        {
            <div class="card-header text-center bg-dark text-white">
                @if (!MessageOpen)
                {
                    <h4 class="m-0">Beskeder</h4>
                }
                else
                {
                    <h4 class="m-0">Besked fra: @data.SenderName</h4>
                }
            </div>

            <div class="card-body">
                @if (!MessageOpen)
                {
                    <table class="table table-hover border">
                        <tbody>
                            <tr style="cursor:pointer;" @onclick="() => ToggleOpenMessage(data.MessageId)">
                                @if (!data.IsRead)
                                {
                                    <td class="align-middle fw-bold" style="max-width:100px;">Fra: @data.SenderName</td>
                                    <td class="align-middle text-center fw-bold"><small>@data.Content</small></td>
                                    <td class="align-middle text-end fw-bold" style="max-width:100px;">Modtaget: @data.Timestamp.ToShortDateString()</td>
                                }
                                else
                                {
                                    <td class="align-middle" style="max-width:100px;">Fra: @data.SenderName</td>
                                    <td class="align-middle text-center"><small>@data.Content</small></td>
                                    <td class="align-middle text-end" style="max-width:100px;">Modtaget: @data.Timestamp.ToShortDateString()</td>
                                }
                            </tr>
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="m-3">@data.Content</p>
                }
            </div>
        }
        @if (MessageOpen)
        {
            <div class="card-footer d-flex">
                <button class="btn btn-sm btn-danger" @onclick="ToggleBack">Tilbage</button>
            </div>
        }
     </div>
</div>

@code {
    [Parameter] public int ReceiverId { get; set; }
    private List<MessageModel> _listOfMessages = new List<MessageModel>();
    private bool MessageOpen = false;
    private string? _Message = "";

    #region OnInitialized
    protected override async Task OnInitializedAsync()
    {
        await ReadMessages();
    }
    #endregion

    #region Getting the messages with th ReceiverId
    public async Task ReadMessages()
    {
        _listOfMessages = await _messageService.GetMessageWithReceiverId(ReceiverId);
    }
    #endregion

    #region ToggleMessage
    private async void ToggleOpenMessage(int messageId)
    {
        MessageOpen = true;
        await _messageService.MarkMessageAsRead(messageId);
    }
    #endregion

    private async void ToggleBack()
    {
        MessageOpen = false;
        await OnInitializedAsync();
        StateHasChanged();
    }
}
